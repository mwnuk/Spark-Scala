----------------------------------------
Some Ways to access HBase:
----------------------------------------
-HBase Shell
-Java API - wrappers for Python,Scala etc
-Spark,Hive,Pig
-REST service
-Thrift Service
-Avro Service
----------------------------------------
REST Service with Python Client
----------------------------------------
1. Start HBase service from ambari
2. Launch REST Service from cmd
     -  su root
     -  /usr/hdp/current/hbase-master/bin/hbase-deamon.sh start
               rest -p 8000 --infoport 8001
3. Load file into hbase in python: 
from starbase import Connection
c=Connection("127.0.0.1","8000")
ratings=c.table('ratings')
if( ratings.exists()):
    print("Dropping existing ratings table\n")
    ratings.drop()
rating.create('rating')  //creates column family
ratingFile=open("e:/download/...","r")

batch = ratings.batch()
for line in ratingFile:
    (userID,movieID,rating,timestamp) = line.split()
    batch.update(userID, {'rating':{movieID:rating}})
ratingfile.close()
batch.commit(finalize=True)
print(ratings.fetch("1")
-----------------------------------------------
HBase Shell 
-----------------------------------------------
 hbase shell   from unix
 list   to get list of existing tables
 create 'users','userinfo'   creates table with one column family

 status - Provides the status of HBase, for example, the number of servers.
 version - Provides the version of HBase being used.
 table_help - Provides help for table-reference commands.
 whoami - Provides information about the user.
 disable - Disables a table.
 is_disabled - Verifies whether a table is disabled.
 enable - Enables a table.
 is_enabled - Verifies whether a table is enabled.
 describe - Provides the description of a table.
 alter - Alters a table.
put - Puts a cell value at a specified column in a specified row in a particular table.
  ex insert: put 'emp','1','professional data:salary','50000'
  ex update: put 'emp','row1','personal:city','Delhi'
get - Fetches the contents of row or a cell.
  ex read row:  get 'emp', '1'
  ex read cell:  get 'emp', 'row1', {COLUMN ? 'personal:name'}
delete - Deletes a cell value in a table.  
  ex delete cell: delete ‘<table name>’, ‘<row>’, ‘<column name >’, ‘<time stamp>’
deleteall - Deletes all the cells in a given row.
  ex: deleteall 'emp','1'
scan - Scans and returns the table data.
count - Counts and returns the number of rows in a table.
truncate - Disables, drops, and recreates a specified table.
hbase> alter ‘ table name ’, ‘delete’ ? ‘ column family ’ 

-----------------------------------------------
HBAse PIG integration
-----------------------------------------------
-must create table ahead of time
-unique key on a first column
-Using clause allws to store into habase
-hbase is transactionalon rows
aso a tool called Import TSV - to move hdfs file into hbase

PIG Script in file hbase.pig:
ratings= LOAD( '/user/xvic/u.user')
USING PigStorage('|')
AS (userID:int, age:int, gender:chararray,zip:int)

STORE ratings INTO 'hbase://users'
USING org.apache.pig.backend.hadoop.hbase.HBaseStorage(
'userinfo:age, userinfo:gender,userinfo:zip');
hbase.pig(END)

Execute:
    pig hbase.pig
Verify:
    hbase shall
    list
    scan 'users'
before dropping table
    disable 'users'
    drop 'users'

-----------------------------------------------
HBase Hive integration 
-----------------------------------------------
CREATE TABLE foo(rowkey STRING, a STRING, b STRING)
STORED BY ‘org.apache.hadoop.hive.hbase.HBaseStorageHandler’
WITH SERDEPROPERTIES (‘hbase.columns.mapping’ = ‘:key,f:c1,f:c2’)
TBLPROPERTIES (‘hbase.table.name’ = ‘bar’);


-----------------------------------------------
MySQL 
-----------------------------------------------
mySql -u root -p
( -p prompts for password, default might be 'hadoop')
you get mysql> prompt
create database movies;
show databases;
SET NAMES 'utf8'
SET characterset utf8;
use movies;
source movielens.sql;   --loads a script creating tables
select * from movies limit 10;
describe table;

or
CREATE TABLE movies(int INTEGER, title VARCHAR(255), releaseDate DATE);
exit











